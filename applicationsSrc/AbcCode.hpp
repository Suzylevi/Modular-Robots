/**
 * @file AbcCode.hpp
 * Generated by VisibleSim BlockCode Generator
 * https://services-stgi.pu-pm.univ-fcomte.fr/visiblesim/generator.php#
 * @author yourName
 * @date 2022-09-20
 **/

#ifndef AbcCode_H_
#define AbcCode_H_
#include "robots/blinkyBlocks/blinkyBlocksSimulator.h"
#include "robots/blinkyBlocks/blinkyBlocksWorld.h"
#include "robots/blinkyBlocks/blinkyBlocksBlockCode.h"

static const int GO_MSG_ID_A = 1001;
static const int BACK_MSG_ID_A = 1002;
static const int LIGHT_MSG_ID_A = 1003;
static const int GO_MSG_ID_B = 1004;
static const int BACK_MSG_ID_B = 1005;
static const int LIGHT_MSG_ID_B = 1006;
static const int LIGHT_MSG_ID_C = 1009;

using namespace BlinkyBlocks;

class AbcCode : public BlinkyBlocksBlockCode {
private:
	BlinkyBlocksBlock *module = nullptr;
	bool isA=false;
	int myDistance;
	int myNbWaitedAnswer;
    P2PNetworkInterface *myLongestChild;
    int myLongestChildDist;
    P2PNetworkInterface *myParent;

	bool isB=false;
	int myDistanceB;
	int myNbWaitedAnswerB;
	P2PNetworkInterface *myLongestChildB;
	int myLongestChildDistB;
	P2PNetworkInterface *myParentB;

	bool isC=false;
public :
	AbcCode(BlinkyBlocksBlock *host);
	~AbcCode() {};

    void startup() override;

	void ElectAfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);
	void AGradfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);
	void ABackfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);

	void ElectBfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);
	void BGradientfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);
	void BBackfunc(std::shared_ptr<Message>_msg,P2PNetworkInterface *sender);

	void ElectCfunc(std::shared_ptr<Message> _msg, P2PNetworkInterface* sender);

	void parseUserBlockElements(TiXmlElement *config) override;
	string onInterfaceDraw();

	/*****************************************************************************/
	static BlockCode *buildNewBlockCode(BuildingBlock *host) {
	    return(new AbcCode((BlinkyBlocksBlock*)host));
	}
	/*****************************************************************************/
};

#endif /* AbcCode_H_ */
